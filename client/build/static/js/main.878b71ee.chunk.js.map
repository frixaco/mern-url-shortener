{"version":3,"sources":["context/AuthContext.js","hooks/httpHook.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","components/LinkCard.js","pages/DetailsPage.js","pages/CreatePage.js","pages/AuthPage.js","hooks/messageHook.js","components/Navbar.js","App.js","hooks/authHook.js","routes.js","index.js"],"names":["noop","AuthContext","createContext","token","userID","login","logout","isAuthenticated","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","idx","key","_id","from","to","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","LinkCard","href","target","rel","clicks","Date","date","toLocaleDateString","DetailsPage","setLink","linkID","useParams","id","getLink","CreatePage","history","useHistory","auth","window","M","updateTextFields","pressHandler","event","push","placeholder","type","value","onChange","e","onKeyPress","htmlFor","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","onClick","disabled","marginRight","Navbar","padding","preventDefault","App","setToken","ready","setReady","setUserID","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.878b71ee.chunk.js","sourcesContent":["import { createContext } from \"react\"\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userID: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false,\r\n})\r\n","import { useState, useCallback } from \"react\"\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const request = useCallback(\r\n        async (url, method = \"GET\", body = null, headers = {}) => {\r\n            setLoading(true)\r\n            try {\r\n                if (body) {\r\n                    body = JSON.stringify(body)\r\n                    headers[\"Content-Type\"] = \"application/json\"\r\n                }\r\n\r\n                const response = await fetch(url, {\r\n                    method,\r\n                    body,\r\n                    headers,\r\n                })\r\n\r\n                const data = await response.json()\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(data.message || \"Something went wrong\")\r\n                }\r\n                setLoading(false)\r\n\r\n                return data\r\n            } catch (e) {\r\n                setLoading(false)\r\n                setError(e.message)\r\n                throw e\r\n            }\r\n        },\r\n        []\r\n    )\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return { loading, request, error, clearError }\r\n}\r\n","import React from \"react\"\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                paddingTop: \"2rem\",\r\n            }}>\r\n            <div className=\"preloader-wrapper active\">\r\n                <div className=\"spinner-layer spinner-red-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n                    <div className=\"gap-patch\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n                    <div className=\"circle-clipper right\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const LinksList = ({ links }) => {\r\n    if (!links.length) return <p className=\"center\">No links for now</p>\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Original</th>\r\n                    <th>Shortened</th>\r\n                    <th>Open</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {links.map((link, idx) => (\r\n                    <tr key={link._id}>\r\n                        <td>{idx + 1}</td>\r\n                        <td>{link.from}</td>\r\n                        <td>{link.to}</td>\r\n                        <td>\r\n                            <Link to={`/details/${link._id}`}>Open</Link>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React, { useState, useContext, useCallback, useEffect } from \"react\"\r\nimport { AuthContext } from \"../context/AuthContext\"\r\nimport { useHttp } from \"../hooks/httpHook\"\r\nimport { Loader } from \"../components/Loader\"\r\nimport { LinksList } from \"../components/LinksList\"\r\n\r\nexport const LinksPage = () => {\r\n    const [links, setLinks] = useState([])\r\n    const { loading, request } = useHttp()\r\n    const { token } = useContext(AuthContext)\r\n\r\n    const fetchLinks = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(\"/api/link\", \"GET\", null, {\r\n                Authorization: `Bearer ${token}`,\r\n            })\r\n            setLinks(fetched)\r\n        } catch (e) {}\r\n    }, [token, request])\r\n\r\n    useEffect(() => {\r\n        fetchLinks()\r\n    }, [fetchLinks])\r\n\r\n    if (loading) return <Loader />\r\n\r\n    return <>{!loading && <LinksList links={links} />}</>\r\n}\r\n","import React from \"react\"\r\n\r\nexport const LinkCard = ({ link }) => {\r\n    return (\r\n        <>\r\n            <h2>Link</h2>\r\n            <p>\r\n                Your link:{\" \"}\r\n                <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {link.to}\r\n                </a>\r\n            </p>\r\n            <p>\r\n                From URL:{\" \"}\r\n                <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {link.from}\r\n                </a>\r\n            </p>\r\n            <p>\r\n                Number of Clicks: <strong>{link.clicks}</strong>\r\n            </p>\r\n            <p>\r\n                Date of creation:{\" \"}\r\n                <strong>{new Date(link.date).toLocaleDateString()}</strong>\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useCallback, useContext, useEffect } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useHttp } from \"../hooks/httpHook\"\r\nimport { AuthContext } from \"../context/AuthContext\"\r\nimport { Loader } from \"../components/Loader\"\r\nimport { LinkCard } from \"../components/LinkCard\"\r\n\r\nexport const DetailsPage = () => {\r\n    const { token } = useContext(AuthContext)\r\n    const { request, loading } = useHttp()\r\n    const [link, setLink] = useState(null)\r\n    const linkID = useParams().id\r\n\r\n    const getLink = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`/api/link/${linkID}`, \"GET\", null, {\r\n                Authorization: `Bearer ${token}`,\r\n            })\r\n\r\n            setLink(fetched)\r\n        } catch (error) {}\r\n    }, [token, linkID, request])\r\n\r\n    useEffect(() => {\r\n        getLink()\r\n    }, [getLink])\r\n\r\n    if (loading) return <Loader />\r\n\r\n    return <>{!loading && link && <LinkCard link={link} />}</>\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\"\r\nimport { useHttp } from \"../hooks/httpHook\"\r\nimport { AuthContext } from \"../context/AuthContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport const CreatePage = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const { request } = useHttp()\r\n    const [link, setLink] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n    const pressHandler = async (event) => {\r\n        if (event.key === \"Enter\") {\r\n            try {\r\n                const data = await request(\r\n                    \"/api/link/generate\",\r\n                    \"POST\",\r\n                    {\r\n                        from: link,\r\n                    },\r\n                    { Authorization: `Bearer ${auth.token}` }\r\n                )\r\n                history.push(`/details/${data.link._id}`)\r\n            } catch (e) {}\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s8 offset-s2\" style={{ paddingTop: \"2rem\" }}>\r\n                <div className=\"input-field\">\r\n                    <input\r\n                        placeholder=\"Enter URL\"\r\n                        id=\"link\"\r\n                        type=\"text\"\r\n                        value={link}\r\n                        onChange={(e) => setLink(e.target.value)}\r\n                        onKeyPress={pressHandler}\r\n                    />\r\n                    <label htmlFor=\"email\">URL</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\"\r\nimport { useHttp } from \"../hooks/httpHook\"\r\nimport { useMessage } from \"../hooks/messageHook\"\r\nimport { AuthContext } from \"../context/AuthContext\"\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    const { loading, request, error, clearError } = useHttp()\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n    const changeHandler = (event) => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request(\"/api/auth/register\", \"POST\", {\r\n                ...form,\r\n            })\r\n            message(data.message)\r\n        } catch (e) {}\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            const data = await request(\"/api/auth/login\", \"POST\", {\r\n                ...form,\r\n            })\r\n            auth.login(data.token, data.userID)\r\n            message(data.message)\r\n        } catch (e) {}\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s7 offset-s3\">\r\n                <h1>Shorten your URl</h1>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Authorization</span>\r\n                        <div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Enter email\"\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    className=\"yellow-input\"\r\n                                    value={form.email}\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Enter password\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    className=\"yellow-input\"\r\n                                    value={form.password}\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button\r\n                            onClick={loginHandler}\r\n                            disabled={loading}\r\n                            className=\"btn yellow darken-4\"\r\n                            style={{ marginRight: 10 }}>\r\n                            Sign In\r\n                        </button>\r\n                        <button\r\n                            onClick={registerHandler}\r\n                            disabled={loading}\r\n                            className=\"btn grey lighten-4 black-text\">\r\n                            Register\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useCallback } from \"react\"\r\n\r\nexport const useMessage = () => {\r\n    return useCallback((text) => {\r\n        if (window.M && text) {\r\n            window.M.toast({ html: text })\r\n        }\r\n    }, [])\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { NavLink, useHistory } from \"react-router-dom\"\r\nimport { AuthContext } from \"../context/AuthContext\"\r\n\r\nexport const Navbar = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const logoutHandler = (event) => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push(\"/\")\r\n    }\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper blue darken-1\" style={{ padding: 0 }}>\r\n                <span className=\"brand-logo\">Shorten URL Links</span>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li>\r\n                        <NavLink to=\"/create\">Create</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/links\">Links</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"/\" onClick={logoutHandler}>\r\n                            Logout\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import \"materialize-css\"\nimport React from \"react\"\nimport { useRoutes } from \"./routes\"\nimport { useAuth } from \"./hooks/authHook\"\nimport { Navbar } from \"./components/Navbar\"\nimport { Loader } from \"./components/Loader\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { AuthContext } from \"./context/AuthContext\"\n\nfunction App() {\n    const { token, login, logout, userID, ready } = useAuth()\n    const isAuthenticated = !!token\n    const routes = useRoutes(isAuthenticated)\n\n    if (!ready) {\n        return <Loader />\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{ token, login, logout, userID, isAuthenticated }}>\n            <BrowserRouter>\n                {isAuthenticated && <Navbar />}\n                <div className=\"container\">{routes}</div>\n            </BrowserRouter>\n        </AuthContext.Provider>\n    )\n}\n\nexport default App\n","import { useState, useCallback, useEffect } from \"react\"\r\n\r\nconst storageName = \"userData\"\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userID, setUserID] = useState(null)\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserID(id)\r\n\r\n        localStorage.setItem(\r\n            storageName,\r\n            JSON.stringify({\r\n                token: jwtToken,\r\n                userID: id,\r\n            })\r\n        )\r\n    }, [])\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserID(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userID)\r\n        }\r\n        setReady(true)\r\n    }, [login])\r\n\r\n    return { login, logout, token, userID, ready }\r\n}\r\n","import React from \"react\"\r\nimport { Switch, Route, Redirect } from \"react-router-dom\"\r\nimport { LinksPage } from \"./pages/LinksPage\"\r\nimport { DetailsPage } from \"./pages/DetailsPage\"\r\nimport { CreatePage } from \"./pages/CreatePage\"\r\nimport { AuthPage } from \"./pages/AuthPage\"\r\n\r\nexport const useRoutes = (isAuthenticated) => {\r\n    if (isAuthenticated)\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/links\" exact>\r\n                    <LinksPage />\r\n                </Route>\r\n                <Route path=\"/create\" exact>\r\n                    <CreatePage />\r\n                </Route>\r\n                <Route path=\"/details/:id\">\r\n                    <DetailsPage />\r\n                </Route>\r\n                <Redirect to=\"/create\" />\r\n            </Switch>\r\n        )\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}